function  [cell_barcode_list, tracer_counts_matrix] = load_CellTracerCounts(filename)
%% Usage: [cell_barcode_list, tracer_counts_matrix] = load_CellTracerCounts(filename)
% 
% This function will load a 'CellTracerCounts.csv' file generated by the 
% 'parse_TracerClones.m' function and return the following objects.  
%
% cell_barcode_list          Cell barcodes (with library name prefix)
% tracer_counts_matrix       UMI counts for the Tracer mRNA
%

%% CODE:
% Create format string for textscan of the file:
fmtStr = ['%s' '%f' '%s' '%f'];

% read file
fileID = fopen(filename);
T = textscan(fileID, fmtStr, 'Delimiter', ',', 'HeaderLines', 0); 
fclose(fileID);

% extract data to structure
Struct.cell_barcodes = T{1};
Struct.clone_ID = T{2};
Struct.tracer_barcode = T{3};
Struct.UMI_counts = T{4};

% find the unique cell barcodes, each will be a column in the final matrix
cell_barcode_list = unique(Struct.cell_barcodes);
nRecords = length(Struct.cell_barcodes);

% prepare an empty matrix 
nCells = length(cell_barcode_list);
nClones = length(unique(Struct.clone_ID));
tracer_counts_matrix = zeros(nClones,nCells);

% populate the matrix
for r = 1:nRecords
    this_column = strcmp(Struct.cell_barcodes(r), cell_barcode_list);
    this_row = Struct.clone_ID(r);
    counts =  Struct.UMI_counts(r);
    tracer_counts_matrix(this_row,this_column) = counts;
end
